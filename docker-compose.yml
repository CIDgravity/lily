version: '3.5'

services:
  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb:2.4.1-pg13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - timescaledb:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.19
    ports:
      - "6831:6831/udp"
      - "5778:5778"
      - "16686:16686"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.1.0
    volumes:
      - ./build/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--log.level=warn'
    ports:
      - 9090:9090
    restart: always

  grafana:
    container_name: grafana
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./build/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./build/grafana/config.monitoring
    restart: always

  #lily:
    #container_name: lily
    #image: filecoin/lily:v0.8.0-calibnet
    #env_file:
      #- ./build/lily/docker.env
    #depends_on:
      #- prometheus
      #- timescaledb
      #- jaeger
    #ports:
      #- 1234:1234
    #volumes:
      #- lily_data:/var/lib/lily
      #- ./build/lily/docker_init.sh:/usr/bin/docker_init.sh
    #entrypoint: /usr/bin/docker_init.sh
    #command:
      #- daemon

volumes:
  timescaledb: {}
  prometheus_data: {}
  grafana_data: {}
  lily_data: {}
